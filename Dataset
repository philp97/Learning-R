# Dataset
> # funções head()-primeira entrada e tail()-última entrada 
> # função str() mostra a estrutura do dataset

> # Criando dataframes
> # Definition of vectors
> name <- c("Mercury", "Venus", "Earth", 
+           "Mars", "Jupiter", "Saturn", 
+           "Uranus", "Neptune")
> type <- c("Terrestrial planet", 
+           "Terrestrial planet", 
+           "Terrestrial planet", 
+           "Terrestrial planet", "Gas giant", 
+           "Gas giant", "Gas giant", "Gas giant")
> diameter <- c(0.382, 0.949, 1, 0.532, 
+               11.209, 9.449, 4.007, 3.883)
> rotation <- c(58.64, -243.02, 1, 1.03, 
+               0.41, 0.43, -0.72, 0.67)
> rings <- c(FALSE, FALSE, FALSE, FALSE, TRUE, TRUE, TRUE, TRUE)
> 
> # Create a data frame from the vectors
> planets_df <- data.frame(name,type,diameter,rotation,rings)
> planets_df
     name               type diameter rotation rings
1 Mercury Terrestrial planet    0.382    58.64 FALSE
2   Venus Terrestrial planet    0.949  -243.02 FALSE
3   Earth Terrestrial planet    1.000     1.00 FALSE
4    Mars Terrestrial planet    0.532     1.03 FALSE
5 Jupiter          Gas giant   11.209     0.41  TRUE
6  Saturn          Gas giant    9.449     0.43  TRUE
7  Uranus          Gas giant    4.007    -0.72  TRUE
8 Neptune          Gas giant    3.883     0.67  TRUE

> str(planets_df)
'data.frame':	8 obs. of  5 variables:
 $ name    : chr  "Mercury" "Venus" "Earth" "Mars" ...
 $ type    : chr  "Terrestrial planet" "Terrestrial planet" "Terrestrial planet" "Terrestrial planet" ...
 $ diameter: num  0.382 0.949 1 0.532 11.209 ...
 $ rotation: num  58.64 -243.02 1 1.03 0.41 ...
 $ rings   : logi  FALSE FALSE FALSE FALSE TRUE TRUE ...
 
 > # funciona que nem matrizes e vetores
> # Selcionando a linha 1, coluna 3
> planets_df[1,3]
[1] 0.382
> # Todos os dados da linha 4
> planets_df[4,]
  name               type diameter rotation rings
4 Mars Terrestrial planet    0.532     1.03 FALSE

> # funciona que nem matrizes e vetores
> # Selcionando a linha 1, coluna 3
> planets_df[1,3]
[1] 0.382
> # Todos os dados da linha 4
> planets_df[4,]
  name               type diameter rotation rings
4 Mars Terrestrial planet    0.532     1.03 FALSE
> 
> # Podemos buscar dados pelo nome das variáveis
> # Ex - Selecione os primeiros 5 valores da coluna diameter
> planets_df[1:5,"diameter"]
[1]  0.382  0.949  1.000  0.532 11.209

> # Um atalho para selecionar todos os dados de uma coluna é o $
> # Ex - Todos os dados da coluna rings 
> rings_vector <- planets_df$rings
> rings_vector
[1] FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE

> # Outra forma de procurar, é pelo resultado
> # Descobrindo que planetas atendem esses requisitos
> planets_df[rings_vector,"name"]
[1] "Jupiter" "Saturn"  "Uranus"  "Neptune"
> # Buscando todas as colunas desses planetas
> planets_df[rings_vector,]
     name      type diameter rotation rings
5 Jupiter Gas giant   11.209     0.41  TRUE
6  Saturn Gas giant    9.449     0.43  TRUE
7  Uranus Gas giant    4.007    -0.72  TRUE
8 Neptune Gas giant    3.883     0.67  TRUE

> # Forma mais sofisticada função subset(dado, subset = condição)
> # Ex - Planetas com diametro < 1
> subset(planets_df, subset = diameter < 1)
     name               type diameter rotation rings
1 Mercury Terrestrial planet    0.382    58.64 FALSE
2   Venus Terrestrial planet    0.949  -243.02 FALSE
4    Mars Terrestrial planet    0.532     1.03 FALSE

> # Organizando os dados
> # Função order()
> a <- c(100,10,1000)
> order(a)
[1] 2 1 3
> # Mostra as posições em ordem do menor para o maior
> # Podemos usar para reorganizar um vetor para uma ordenação
> a[order(a)]
[1]   10  100 1000

> # Ex - ordenando os planetas por ordem de diametro
> positions <- order(planets_df$diameter)
> planets_df[positions,]
     name               type diameter rotation rings
1 Mercury Terrestrial planet    0.382    58.64 FALSE
4    Mars Terrestrial planet    0.532     1.03 FALSE
2   Venus Terrestrial planet    0.949  -243.02 FALSE
3   Earth Terrestrial planet    1.000     1.00 FALSE
8 Neptune          Gas giant    3.883     0.67  TRUE
7  Uranus          Gas giant    4.007    -0.72  TRUE
6  Saturn          Gas giant    9.449     0.43  TRUE
5 Jupiter          Gas giant   11.209     0.41  TRUE

# Lógica desse exercício - cria um vetor com a posição do planetas ordenada pelo diâmetro
> positions
[1] 1 4 2 3 8 7 6 5
# Pega os dados desses planetas na ordem dado pelo vetor positions, que o row(linha)

